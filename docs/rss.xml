<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>新鲜哥的技术博客</title><link>http://www.ababll5.cn</link><description>一个初中生的技术博客</description><copyright>新鲜哥的技术博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://s2.loli.net/2024/08/26/OHxIvr4wC89FgtB.jpg</url><title>avatar</title><link>http://www.ababll5.cn</link></image><lastBuildDate>Sat, 07 Sep 2024 15:02:44 +0000</lastBuildDate><managingEditor>新鲜哥的技术博客</managingEditor><ttl>60</ttl><webMaster>新鲜哥的技术博客</webMaster><item><title>c++结构体</title><link>http://www.ababll5.cn/post/c%2B%2B-jie-gou-ti.html</link><description># 小白学结构体&#13;
&#13;
# 1、定义与使用&#13;
&#13;
```cpp&#13;
#include&lt;iostream&gt;&#13;
#include&lt;string&gt;    &#13;
using namespace std;&#13;
&#13;
//1 创建学生数据内型：学生包括（姓名，年龄，分数）&#13;
//自定义数据内型，一些内型集合组成的一个内型&#13;
//语法 struct 内型名称 {成员列表}&#13;
struct sb//student&#13;
{&#13;
  //成员列表&#13;
&#13;
  //姓名&#13;
   string name;&#13;
  //年龄&#13;
   int year;&#13;
  //分数&#13;
  int test;&#13;
}s3; //顺便定义不建议使用&#13;
&#13;
&#13;
//2 通过学生三个内型创建具体学生&#13;
&#13;
int main(void)&#13;
{&#13;
    //2.1 struct student s1;&#13;
    //下面的struct关键字可以不写&#13;
    struct sb s1;&#13;
    //给s1赋值&#13;
    s1.name = '张三';&#13;
    s1.year = 18;&#13;
    s1.test = 100;&#13;
cout&lt;&lt;'姓名: '&lt;&lt;s1.name&lt;&lt;' 年龄: '&lt;&lt;s1.year&lt;&lt;' 成绩: '&lt;&lt;s1.test&lt;&lt;endl;&#13;
&#13;
&#13;
//2.2 struct student s2 = {……}&#13;
struct sb s2 = {'小红',17,89};&#13;
cout&lt;&lt;'姓名: '&lt;&lt;s2.name&lt;&lt;' 年龄: '&lt;&lt;s2.year&lt;&lt;' 成绩: '&lt;&lt;s2.test&lt;&lt;endl;&#13;
&#13;
&#13;
//2.3 在定义结构体时顺便创建结构体变量 （不建议用）&#13;
 //看main函数上面的struct&#13;
    s3.name = '张四';&#13;
    s3.year = 18;&#13;
    s3.test = 100;&#13;
&#13;
    return 0;&#13;
}&#13;
```&#13;
&#13;
# 2、结构体数组&#13;
&#13;
```cpp&#13;
#include&lt;iostream&gt;&#13;
#include&lt;string&gt;&#13;
using namespace std;&#13;
//结构体数组&#13;
//1、定义结构体&#13;
struct sd       //学生缩写&#13;
{&#13;
   string name;  //姓名&#13;
   int  yesr;    //年龄&#13;
   int  test;&#13;
};     //记得加;&#13;
&#13;
&#13;
int main(void)&#13;
{&#13;
//2、创建结构体数组&#13;
  struct sd sdArr[2] = &#13;
  {&#13;
    {'张三',18,96},&#13;
    {'李四',19,97}&#13;
    //...&#13;
  }; &#13;
&#13;
     &#13;
 &#13;
//3、给结构体数组中的元素赋值&#13;
    sdArr[1].yesr = 17 ;          //把李四的年龄改为17&#13;
 &#13;
&#13;
 //输出&#13;
for(int i = 0;i&lt;2;i++)&#13;
{&#13;
cout&lt;&lt;'姓名: '&lt;&lt;sdArr[i].name&#13;
    &lt;&lt;' 年龄: '&lt;&lt;sdArr[i].yesr&#13;
    &lt;&lt;' 分数: '&lt;&lt;sdArr[i].test&#13;
    &lt;&lt;endl;&#13;
}&#13;
&#13;
    return 0;&#13;
}&#13;
```&#13;
&#13;
# 3、结构体指针&#13;
&#13;
```cpp&#13;
#include &lt;iostream&gt;&#13;
using namespace std;&#13;
&#13;
struct Student&#13;
{&#13;
    string name;&#13;
    int age;&#13;
    int score;&#13;
};&#13;
&#13;
int main()&#13;
{&#13;
    Student stu1 = {'张三', 18, 90};&#13;
    Student *p = &amp;stu1;&#13;
&#13;
    cout &lt;&lt; '姓名：' &lt;&lt; p-&gt;name &lt;&lt; endl;&#13;
    cout &lt;&lt; '年龄：' &lt;&lt; p-&gt;age &lt;&lt; endl;&#13;
    cout &lt;&lt; '成绩：' &lt;&lt; p-&gt;score &lt;&lt; endl;&#13;
&#13;
    return 0;&#13;
}&#13;
# 4、结构体嵌套&#13;
​```cpp&#13;
// 包含iostream头文件，使用std命名空间&#13;
#include &lt;iostream&gt;&#13;
using namespace std;&#13;
&#13;
// 定义Student结构体，包含name、age、score三个成员变量&#13;
struct Student&#13;
{&#13;
    string name;&#13;
    int age;&#13;
    int score;&#13;
};&#13;
&#13;
// 定义Teacher结构体，包含name、age、salary、stu四个成员变量&#13;
struct Teacher&#13;
{&#13;
    string name;&#13;
    int age;&#13;
    int salary;&#13;
    Student stu;&#13;
};&#13;
&#13;
// 主函数，程序从这里开始执行&#13;
int main()&#13;
{&#13;
    // 定义Teacher类型的变量t1，并初始化其成员变量&#13;
    Teacher t1 = {'张三', 38, 5000, {'李四', 18, 90}};&#13;
&#13;
    // 输出t1的成员变量&#13;
    cout &lt;&lt; '姓名：' &lt;&lt; t1.name &lt;&lt; endl;&#13;
    cout &lt;&lt; '年龄：' &lt;&lt; t1.age &lt;&lt; endl;&#13;
    cout &lt;&lt; '工资：' &lt;&lt; t1.salary &lt;&lt; endl;&#13;
    cout &lt;&lt; '姓名：' &lt;&lt; t1.stu.name &lt;&lt; endl;&#13;
    cout &lt;&lt; '年龄：' &lt;&lt; t1.stu.age &lt;&lt; endl;&#13;
    cout &lt;&lt; '成绩：' &lt;&lt; t1.stu.score &lt;&lt; endl;&#13;
&#13;
    // 函数返回值为0，表示程序正常结束&#13;
    return 0;&#13;
}&#13;
```&#13;
&#13;
# 5、结构体作为函数参数&#13;
&#13;
```cpp&#13;
// 结构体做函数参数&#13;
// 传递方式&#13;
// 值传递&#13;
// 指针传递&#13;
&#13;
#include &lt;iostream&gt;&#13;
#include &lt;string&gt;&#13;
using namespace std;&#13;
&#13;
// 定义学生结构体&#13;
struct sd&#13;
{&#13;
    string name; // 名字&#13;
    int age;     // 年龄&#13;
    int test;    // 分数&#13;
};&#13;
&#13;
// 输出学生基本信息函数&#13;
&#13;
// 1‘值传递&#13;
void ncout(struct sd s)&#13;
{&#13;
    s.name = '我'; // 只改变这次自定义函数中的输出结果&#13;
    cout &lt;&lt; '子函数中的值传递输出 ' &lt;&lt; endl&#13;
         &lt;&lt; ' 姓名: ' &lt;&lt; s.name&#13;
         &lt;&lt; endl&#13;
         &lt;&lt; ' 年龄: ' &lt;&lt; s.age &lt;&lt; endl&#13;
         &lt;&lt; ' 分数: ' &lt;&lt; s.test&#13;
         &lt;&lt; endl;&#13;
}&#13;
&#13;
// 地址传递(要用到指针)&#13;
void pncout(struct sd *s)&#13;
{&#13;
    s-&gt;name = '你'; // 全局修改&#13;
    cout &lt;&lt; '子函数中的地址传递输出 ' &lt;&lt; endl&#13;
         &lt;&lt; ' 姓名: ' &lt;&lt; s-&gt;name&#13;
         &lt;&lt; endl&#13;
         &lt;&lt; ' 年龄: ' &lt;&lt; s-&gt;age &lt;&lt; endl&#13;
         &lt;&lt; ' 分数: ' &lt;&lt; s-&gt;test&#13;
         &lt;&lt; endl;&#13;
}&#13;
&#13;
int main(void)&#13;
{&#13;
    // 将学生传入一个参数中 并打印&#13;
&#13;
    // 创建结构体变量&#13;
    struct sd s;&#13;
    s.name = '膝关节';&#13;
    s.age = 19;&#13;
    s.test = 98;&#13;
&#13;
    // 自定义函数输出&#13;
    ncout(s); // 自定义函数，做到输出学生的基本信息&#13;
    cout &lt;&lt; endl&#13;
         &lt;&lt; endl;&#13;
&#13;
    pncout(&amp;s); // 自定义函数，做到输出学生的基本信息&#13;
    cout &lt;&lt; endl&#13;
         &lt;&lt; endl;&#13;
&#13;
    // 正常的输出方式，不过我们今天要用的是自定义函数来输出这一穿&#13;
    cout &lt;&lt; 'main函数中打印' &lt;&lt; endl&#13;
         &lt;&lt; ' 姓名： ' &lt;&lt; s.name&#13;
         &lt;&lt; endl&#13;
         &lt;&lt; '年龄' &lt;&lt; s.age&#13;
         &lt;&lt; endl&#13;
         &lt;&lt; '分数' &lt;&lt; s.test &lt;&lt; endl;&#13;
&#13;
    return 0;&#13;
&#13;
&#13;
    //运行结果 &#13;
&#13;
    // 子函数中的值传递输出&#13;
    // 姓名: 膝关节&#13;
    // 年龄: 19&#13;
    // 分数: 98&#13;
    //&#13;
    // 子函数中的地址传递输出&#13;
    // 姓名: 你&#13;
    // 年龄: 19&#13;
    // 分数: 98&#13;
    //&#13;
    // main函数中打印&#13;
    // 姓名: 膝关节&#13;
    // 年龄: 19&#13;
    // 分数: 98&#13;
}&#13;
```&#13;
&#13;
本文的所有源码都在[[我的github](https://github.com/ababll5/blog_cpp)](https://github.com/ababll5/blog_cpp)里。</description><guid isPermaLink="true">http://www.ababll5.cn/post/c%2B%2B-jie-gou-ti.html</guid><pubDate>Sat, 07 Sep 2024 15:02:18 +0000</pubDate></item><item><title>c++指针</title><link>http://www.ababll5.cn/post/c%2B%2B-zhi-zhen.html</link><description># 入门&#13;
&#13;
## 认识指针&#13;
&#13;
```cpp&#13;
#include&lt;iostream&gt;&#13;
using namespace std;&#13;
&#13;
int main(void)&#13;
{&#13;
// 1定义指针&#13;
int a=10;&#13;
&#13;
//指针定义语法:数据内型*指针变量名；&#13;
int*p;&#13;
&#13;
//让指针记录变量a的地址&#13;
p = &amp;a;&#13;
cout&lt;&lt;'a的地址'&lt;&lt;&amp;a&lt;&lt;endl&lt;&lt;endl;&#13;
cout&lt;&lt;'指针p：'&lt;&lt;p&lt;&lt;endl&lt;&lt;endl;&#13;
&#13;
//2使用指针&#13;
//可以通过解引用找到指针指向的内存&#13;
//指针前加*代表解引用，找到指针指向的内存数据&#13;
*p = 1000;   //找到a并修改他    &#13;
cout&lt;&lt;'a ='&lt;&lt;a&lt;&lt;endl;&#13;
cout&lt;&lt;'*p ='&lt;&lt;*p&lt;&lt;endl;&#13;
    return 0;&#13;
}&#13;
```&#13;
&#13;
## 指针的大小&#13;
&#13;
用sizeof计算出指针的大小&#13;
-&#13;
&#13;
```cpp&#13;
#include&lt;iostream&gt;&#13;
using namespace std;&#13;
&#13;
int main(void)&#13;
{&#13;
//指针所占内存空间&#13;
int a=10;&#13;
//int * p;&#13;
//p = &amp;a;&#13;
 int*p =&amp;a;&#13;
 //32位(x86)4字节&#13;
 //64位(x64)8字节&#13;
 //所有&#13;
 cout&lt;&lt;'int * = '&lt;&lt;sizeof(int*)&lt;&lt;endl;&#13;
 cout&lt;&lt;'float * = '&lt;&lt;sizeof(float*)&lt;&lt;endl;&#13;
 cout&lt;&lt;'double * = '&lt;&lt;sizeof(double*)&lt;&lt;endl;&#13;
 cout&lt;&lt;'char * = '&lt;&lt;sizeof(char*)&lt;&lt;endl;&#13;
&#13;
return 0;&#13;
}   &#13;
```&#13;
&#13;
不同的编译方式就会出现不同的大小&#13;
&#13;
# 注意事项&#13;
&#13;
## 空指针(错误的)&#13;
&#13;
```cpp&#13;
#include&lt;iostream&gt;&#13;
using namespace std;&#13;
&#13;
int main(void)&#13;
{&#13;
   //空指针&#13;
   //空指针用于给指针变量初始化&#13;
   int*p =NULL;&#13;
&#13;
   //空指针不可访问&#13;
   //因为0～255是系统占用的不可访问&#13;
   &#13;
&#13;
&#13;
    return 0;&#13;
}&#13;
```&#13;
&#13;
## 野指针(错误的)&#13;
&#13;
```cpp&#13;
#include&lt;iostream&gt;&#13;
using namespace std;&#13;
&#13;
int main(void)&#13;
{&#13;
   //野指针&#13;
   //程序中，避免野指针&#13;
   int*p =(int *)0x1100;&#13;
   cout&lt;&lt;*p&lt;&lt;endl;&#13;
&#13;
    return 0;&#13;
}&#13;
```&#13;
&#13;
# 进阶&#13;
&#13;
## const修饰指针&#13;
&#13;
```cpp&#13;
#include &lt;iostream&gt;&#13;
using namespace std;&#13;
int a = 10;&#13;
int b = 10;&#13;
&#13;
int main(void)&#13;
{&#13;
    // 1 const 修饰指针&#13;
    // 常量指针&#13;
    const int *p = &amp;a; // 不可改值&#13;
    //******错误********&#13;
    //    *p = 20&#13;
    //******错误********&#13;
    p = &amp;b; // 可该指向&#13;
&#13;
    //************************************************* */&#13;
&#13;
    // 2 const修饰常量&#13;
    // 指针常量&#13;
    int *const p2 = &amp;a; // 不可该指向&#13;
    //******错误********&#13;
    //    p2 = &amp;b&#13;
    //******错误********&#13;
    *p2 = 100; // 可改值&#13;
&#13;
/******************************************************* */&#13;
&#13;
    // 3 const修饰指针和常量&#13;
    const int* const p3 =&amp;a; //都不可改&#13;
&#13;
&#13;
    return 0;&#13;
}&#13;
```&#13;
&#13;
## 指针和数组结合&#13;
&#13;
```cpp&#13;
#include &lt;iostream&gt;&#13;
using namespace std;&#13;
&#13;
int main(void)&#13;
{&#13;
    //****** 指针和数组 ***** */&#13;
    // 利用指针访问数组的元素&#13;
    int arr[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};&#13;
    cout &lt;&lt; '第一个元素 ' &lt;&lt; arr[0] &lt;&lt; endl;&#13;
    int *p = arr; // arr就是数组的首地址&#13;
    cout &lt;&lt; '指针访问第一个元素 ' &lt;&lt; *p &lt;&lt; endl;&#13;
     &#13;
    cout&lt;&lt;endl&lt;&lt;endl&lt;&lt;endl;          //全是空行不用理&#13;
&#13;
&#13;
     cout&lt;&lt;'利用指针访问所有'&lt;&lt;endl;&#13;
     int *p2 = arr;&#13;
     for(int i;i&lt;10;i++)&#13;
     {&#13;
      cout&lt;&lt;'指针访问第'&lt;&lt;i&lt;&lt;'个元素:'&lt;&lt;*p2&lt;&lt;endl;&#13;
      p2++;&#13;
&#13;
     }&#13;
&#13;
&#13;
    return 0;&#13;
}&#13;
```&#13;
&#13;
运行结果&#13;
-&#13;
&#13;
```js&#13;
第一个元素 1&#13;
指针访问第一个元素 1&#13;
&#13;
&#13;
利用指针访问所有&#13;
指针访问第0个元素:1&#13;
指针访问第1个元素:2&#13;
指针访问第2个元素:3&#13;
指针访问第3个元素:4&#13;
指针访问第4个元素:5&#13;
指针访问第5个元素:6&#13;
指针访问第6个元素:7&#13;
指针访问第7个元素:8&#13;
指针访问第8个元素:9&#13;
指针访问第9个元素:10&#13;
```&#13;
&#13;
## 指针、函数、数组(冒泡排序)&#13;
&#13;
```cpp&#13;
#include &lt;iostream&gt;&#13;
using namespace std;&#13;
&#13;
// 冒泡排序函数  参数1：首地址  参数2：函数长度&#13;
void maopao(int *arr, int len)  //不用指针数组传不到自定义函数这&#13;
{&#13;
    for (int i = 0; i &lt; len - 1; i++)&#13;
    {&#13;
        for (int j = 0; j &lt; len - i - 1; j++)&#13;
        {&#13;
            // j大于j+1就交换&#13;
            if (arr[j] &gt; arr[j + 1])&#13;
            {&#13;
                int temp = arr[j];&#13;
                arr[j] = arr[j + 1];&#13;
                arr[j + 1] = temp;&#13;
            }&#13;
        }&#13;
    }&#13;
}&#13;
&#13;
// 打印数组&#13;
void sb(int *arr,int len)&#13;
{&#13;
    for (int i = 0; i &lt; len; i++)&#13;
    {&#13;
        cout &lt;&lt; arr[i] &lt;&lt; endl;&#13;
    }&#13;
}&#13;
&#13;
int main(void)&#13;
{&#13;
    // 1、先创建数组&#13;
    int arr[10] = {4, 3, 6, 9, 1, 2, 10, 8, 7, 5};&#13;
&#13;
    // 数组长度&#13;
    int len = sizeof(arr) / sizeof(arr[0]);&#13;
    // 2 创建函数 实现冒泡排序&#13;
    maopao(arr, len);&#13;
&#13;
    // 3 打印排序后的数组&#13;
    sb(arr, len);&#13;
&#13;
    return 0;&#13;
}&#13;
```&#13;
&#13;
运行结果&#13;
-&#13;
&#13;
```js&#13;
1&#13;
2&#13;
3&#13;
4&#13;
5&#13;
6&#13;
7&#13;
8&#13;
9&#13;
10&#13;
```&#13;
&#13;
&#13;
&#13;
[[我的](https://github.com/ababll5/blog/issues/(https://github.com/ababll5/blog_cpp))]((https://github.com/ababll5/blog_cpp))。</description><guid isPermaLink="true">http://www.ababll5.cn/post/c%2B%2B-zhi-zhen.html</guid><pubDate>Sat, 07 Sep 2024 15:01:34 +0000</pubDate></item><item><title>c++输出hello world</title><link>http://www.ababll5.cn/post/c%2B%2B-shu-chu-hello%20world.html</link><description># c++输出hello world教程&#13;
&#13;
### 首先得有头文件&#13;
&#13;
```c++&#13;
#include&lt;iostream&gt;&#13;
```&#13;
&#13;
### 然后主函数&#13;
&#13;
```C++&#13;
int main(void)&#13;
```&#13;
&#13;
### 全代码&#13;
&#13;
```c++&#13;
#include&lt;iostream&gt;&#13;
int main(void)&#13;
{&#13;
    std::cout&lt;&lt;'hello world'&lt;&lt;std::endl;     //endl是换行的意思(注意：写完记得加分号;)&#13;
    return 0;                           //程序结束&#13;
}&#13;
```&#13;
&#13;
如果编译成exe发现打开后窗口一闪而过怎么办呢？  &#13;
&#13;
## 如果是Windows用户那就在`return 0;`的上面加一个  &#13;
&#13;
```c++&#13;
sysytem('pause')              //这个代码的意思就是用Windows的终端命令pause(按任意建继续)&#13;
```&#13;
&#13;
## 如果是Linux用户那就在`return 0;`的上面加个&#13;
&#13;
```c++&#13;
cin.get();                   //不管什么用户都最好用这个，这行代码所有系统都能运行&#13;
```。</description><guid isPermaLink="true">http://www.ababll5.cn/post/c%2B%2B-shu-chu-hello%20world.html</guid><pubDate>Sat, 07 Sep 2024 14:57:57 +0000</pubDate></item><item><title>hexo 简单使用</title><link>http://www.ababll5.cn/post/hexo%20-jian-dan-shi-yong.html</link><description>&#13;
&#13;
上次我们搭建好了基于hexo框架的个人博客今天我就来教大家如何使用&#13;
=&#13;
&#13;
# 创建博文&#13;
&#13;
```&#13;
hexo new '新博文标题'&#13;
```&#13;
&#13;
然后在&#13;
`hexo`根目录下找到`source` 里面的`_posts`找到你刚创建的`项目名.md`用记事本或VScode编辑它（个人推荐VScode）  &#13;
&#13;
打开后&#13;
-&#13;
&#13;
```md&#13;
---&#13;
title: 搭建好后个人hexo框架的博客该如何使用     //标题&#13;
date: 2024-06-22 06:48:15                   //日期&#13;
tags:                                      //标签&#13;
   &#13;
---&#13;
&#13;
之后就是md语法写的博客了&#13;
(我的主题是Butterfly，我也推荐用这个主题想装的请看后文)&#13;
```&#13;
&#13;
写完后记得保存然后`hexo g`生成一遍不然网站上不会出现&#13;
&#13;
# 如何安装好看的主题&#13;
&#13;
虽然自带的主题不好看，但hexo框架支持很多个主题。</description><guid isPermaLink="true">http://www.ababll5.cn/post/hexo%20-jian-dan-shi-yong.html</guid><pubDate>Sat, 07 Sep 2024 14:39:18 +0000</pubDate></item><item><title>hexo+github搭建教程</title><link>http://www.ababll5.cn/post/hexo%2Bgithub-da-jian-jiao-cheng.html</link><description>&#13;
&#13;
参考于https://blog.csdn.net/qq_62928039/article/details/130248518&#13;
&#13;
# 首先&#13;
&#13;
安装该安装的 &#13;
-&#13;
&#13;
+ nodejs  &#13;
+ git&#13;
&#13;
## 安装下载部署hexo  &#13;
&#13;
- 创建文件夹（命名随便）  &#13;
  右键文件夹选`git bash`打开    &#13;
  切换国内路线`  npm config set registry https://npmmirror.com`  &#13;
&#13;
`npm install -g hexo-cli`安装hexo&#13;
`hexo init`初始化· 没这一步文件夹内的文件显示不出来  &#13;
&#13;
![展示](https://img.picui.cn/free/2024/06/21/667560465c8ce.bmp)&#13;
出现这些文件才算成功，否则有问题&#13;
要么自行百度要么问(我的微信15913105505)  &#13;
&#13;
然后&#13;
-&#13;
输入`hexo g`和`hexo s`  &#13;
就会出现以下界面(恭喜你本地部署成功)&#13;
![界面](https://img.picui.cn/free/2024/06/21/667567982b689.png) &#13;
&#13;
随后&#13;
-&#13;
&#13;
```&#13;
输入命令：ssh-keygen -t rsa -C '注册GitHub的邮箱'&#13;
进入c盘的/用户/你的用户名/.ssh/id_rsa.pub&#13;
```&#13;
&#13;
用记事本打开`id_rsa.pub`然后复制里面的id  &#13;
&#13;
之后&#13;
-&#13;
![4](https://img.picui.cn/free/2024/06/21/6675681ecbdee.png)&#13;
粘贴进去👇&#13;
![5](https://img.picui.cn/free/2024/06/21/66756820a06de.png)&#13;
&#13;
&#13;
## 验证&#13;
&#13;
```&#13;
输入命令（git）：ssh -T git@github.com 并且输入yes之后，行末尾会显示你的用户名&#13;
（绑定成功邮箱会收到邮件提醒）&#13;
接着在本地绑定与Github的用户名和邮箱（git）&#13;
输入命令：git config --global user.name “注册时用户名”&#13;
输入命令：git config --global user.email “注册时邮箱”&#13;
```&#13;
&#13;
## 上传&#13;
&#13;
![9](https://img.picui.cn/free/2024/06/21/667560465c8ce.bmp)&#13;
自行配置自己的名字  &#13;
然后将文章末尾改为以下格式：&#13;
&#13;
```&#13;
deploy:&#13;
        type: git&#13;
        repo: git@github.com:用户名/用户名.github.io.git&#13;
        branch: main&#13;
```&#13;
&#13;
下载上传工具`npm install hexo-deployer-git`&#13;
&#13;
### 以后都是下面的步骤上传文章&#13;
&#13;
```&#13;
先本地预览: hexo g &amp;&amp; hexo s&#13;
```&#13;
&#13;
```&#13;
保险起见再生成一次: hexo g&#13;
```&#13;
&#13;
```&#13;
上传GitHub: hexo d&#13;
```&#13;
&#13;
使用的话看官方文档  &#13;
有主题的看主题的官方文档。</description><guid isPermaLink="true">http://www.ababll5.cn/post/hexo%2Bgithub-da-jian-jiao-cheng.html</guid><pubDate>Sat, 07 Sep 2024 14:38:33 +0000</pubDate></item><item><title>html列表</title><link>http://www.ababll5.cn/post/html-lie-biao.html</link><description># 使用场景&#13;
&#13;
网页排版&#13;
&#13;
特点：按照行的方式，整齐显示类容&#13;
&#13;
种类：无需列表、有序列表、自定义列表&#13;
&#13;
&#13;
&#13;
# 无序列表&#13;
&#13;
在网页中表示一组无顺序之分的列表，如新闻列表&#13;
&#13;
组成&#13;
&#13;
- `ul` 表示无序列表的整体，用于包裹标签&#13;
- `li`表示无序列表的每一项，用于包含每一行的内容&#13;
&#13;
&#13;
&#13;
特点&#13;
&#13;
列表每一项都有一个黑点如下&#13;
&#13;
- &#13;
&#13;
 &#13;
&#13;
注意&#13;
&#13;
ul标签只允许包含li标签&#13;
&#13;
li标签可以包含任何内容 &#13;
&#13;
&#13;
&#13;
水果变量&#13;
&#13;
```html&#13;
&lt;!DOCTYPE html&gt;&#13;
&lt;html lang='en'&gt;&#13;
&lt;head&gt;&#13;
    &lt;meta charset='UTF-8'&gt;&#13;
    &lt;meta name='viewport' content='width=device-width, initial-scale=1.0'&gt;&#13;
    &lt;title&gt;Document&lt;/title&gt;&#13;
&lt;/head&gt;&#13;
&lt;body&gt;&#13;
    &lt;ul&gt;&#13;
        &lt;li&gt;香蕉&lt;/li&gt;&#13;
        &lt;li&gt;榴莲&lt;/li&gt;&#13;
    &lt;/ul&gt;&#13;
&lt;/body&gt;&#13;
&lt;/html&gt;&#13;
```&#13;
&#13;
&#13;
&#13;
# 有序列表&#13;
&#13;
&#13;
&#13;
- `ol` 表示无序列表的整体，用于包裹标签&#13;
- `li`表示无序列表的每一项，用于包含每一行的内容&#13;
&#13;
规则同上&#13;
&#13;
&#13;
&#13;
例子 &#13;
&#13;
```html&#13;
&lt;!DOCTYPE html&gt;&#13;
&lt;html lang='en'&gt;&#13;
&lt;head&gt;&#13;
    &lt;meta charset='UTF-8'&gt;&#13;
    &lt;meta name='viewport' content='width=device-width, initial-scale=1.0'&gt;&#13;
    &lt;title&gt;Document&lt;/title&gt;&#13;
&lt;/head&gt;&#13;
&lt;body&gt;&#13;
    &lt;ol&gt;&#13;
        &lt;li&gt;张三:100分&lt;/li&gt;&#13;
        &lt;li&gt;李四:80分&lt;/li&gt;&#13;
    &lt;/ol&gt;&#13;
&lt;/body&gt;&#13;
&lt;/html&gt;&#13;
```&#13;
&#13;
&#13;
&#13;
# 自定义列表&#13;
&#13;
&#13;
&#13;
![](https://fastly.jsdelivr.net/gh/ababll5/tuchuang@img/img/20240717114453.png)&#13;
&#13;
特点&#13;
&#13;
- dd钱会默认显示缩进效果  &#13;
&#13;
&#13;
&#13;
注意&#13;
&#13;
- dl标签只允许dt/dd标签&#13;
&#13;
- dt/dd标签可以包含任意内容&#13;
&#13;
```html&#13;
&lt;!DOCTYPE html&gt;&#13;
&lt;html lang='en'&gt;&#13;
&lt;head&gt;&#13;
    &lt;meta charset='UTF-8'&gt;&#13;
    &lt;meta name='viewport' content='width=device-width, initial-scale=1.0'&gt;&#13;
    &lt;title&gt;Document&lt;/title&gt;&#13;
&lt;/head&gt;&#13;
&lt;body&gt;&#13;
    &lt;dl&gt;&#13;
        &lt;dt&gt;帮助中心&lt;/dt&gt;&#13;
        &lt;dd&gt;联系客服&lt;/dd&gt;&#13;
        &lt;dd&gt;账户管理&lt;/dd&gt;&#13;
    &lt;/dl&gt;&#13;
&lt;/body&gt;&#13;
&lt;/html&gt;&#13;
```&#13;
&#13;
。</description><guid isPermaLink="true">http://www.ababll5.cn/post/html-lie-biao.html</guid><pubDate>Sat, 07 Sep 2024 14:37:40 +0000</pubDate></item><item><title>初学html(标签</title><link>http://www.ababll5.cn/post/chu-xue-html%28-biao-qian.html</link><description># 文本格式化标签&#13;
&#13;
&lt;img src='https://cdn.jsdelivr.net/gh/ababll5/tuchuang@img/img/20240716170135.png'/&gt;&#13;
&#13;
重要的用右边的标签（起到提示作用，提示你这个很重要）&#13;
&#13;
```html&#13;
&lt;!DOCTYPE html&gt;&#13;
&lt;html lang='en'&gt;&#13;
&#13;
&lt;head&gt;&#13;
    &lt;meta charset='UTF-8'&gt;&#13;
    &lt;meta name='viewport' content='width=device-width, initial-scale=1.0'&gt;&#13;
    &lt;title&gt;03文本格式化&lt;/title&gt;&#13;
&lt;/head&gt;&#13;
&#13;
&lt;body&gt;&#13;
    &lt;b&gt;加粗1&lt;/b&gt;&#13;
    &lt;strong&gt;加粗2&lt;/strong&gt;&#13;
    &lt;br&gt;&#13;
&#13;
    &lt;u&gt;下划线1&lt;/u&gt;&#13;
    &lt;ins&gt;下划线2&lt;/ins&gt;&#13;
    &lt;br&gt;&#13;
&#13;
    &lt;i&gt;斜线1&lt;/i&gt;&#13;
    &lt;em&gt;斜线2&lt;/em&gt;&#13;
    &lt;br&gt;&#13;
&#13;
    &lt;s&gt;删除1&lt;/s&gt;&#13;
    &lt;del&gt;删除2&lt;/del&gt;&#13;
&#13;
&lt;/body&gt;&#13;
&#13;
&lt;/html&gt;&#13;
```&#13;
&#13;
&#13;
&#13;
&#13;
&#13;
# 媒体标签&#13;
&#13;
&#13;
&#13;
## 图片标签&#13;
&#13;
- 在网页中现实图片&#13;
&#13;
- 书写格式`&lt;img src = '图片' `&#13;
&#13;
- 双引号里面的属性写在标签内&#13;
&#13;
- 标签可以同时存在多个属性&#13;
&#13;
- 属性之间要用空格隔开&#13;
- 属性之间没有顺序之分&#13;
&#13;
```html&#13;
&lt;!DOCTYPE html&gt;&#13;
&lt;html lang='en'&gt;&#13;
&lt;head&gt;&#13;
    &lt;meta charset='UTF-8'&gt;&#13;
    &lt;meta name='viewport' content='width=device-width, initial-scale=1.0'&gt;&#13;
    &lt;title&gt;04-图片标签&lt;/title&gt;&#13;
&lt;/head&gt;&#13;
&lt;body&gt;&#13;
    &lt;img src='./640.gif'&gt;&#13;
&lt;/body&gt;&#13;
&lt;/html&gt;&#13;
```&#13;
&#13;
&#13;
&#13;
### 图片标签alt属性&#13;
&#13;
`&lt;img src='./没有图片' alt='加载失败'&gt;`&#13;
&#13;
属性值: 替换文本&#13;
&#13;
- 当图片加载失败时，就会现实alt中的文本&#13;
- 当图片加载成功时就不会现实alt中的文本&#13;
&#13;
&#13;
&#13;
```html&#13;
&lt;!DOCTYPE html&gt;&#13;
&lt;html lang='en'&gt;&#13;
&lt;head&gt;&#13;
    &lt;meta charset='UTF-8'&gt;&#13;
    &lt;meta name='viewport' content='width=device-width, initial-scale=1.0'&gt;&#13;
    &lt;title&gt;04-图片标签&lt;/title&gt;&#13;
&lt;/head&gt;&#13;
&lt;body&gt;&#13;
&lt;img src='./没有图片' alt='加载失败'&gt;&#13;
&lt;/body&gt;&#13;
&lt;/html&gt;&#13;
```&#13;
&#13;
&#13;
&#13;
###  图片标签title属性&#13;
&#13;
`&lt;img src='./图片' alt='替换文本' title='提示文本'&gt;`&#13;
&#13;
属性值： 提示文本&#13;
&#13;
​    当鼠标悬停在图片时显示的文本&#13;
&#13;
title属性不止在图片标签，还可以用于其他标签&#13;
&#13;
&#13;
&#13;
### 图片标签width和height属性&#13;
&#13;
属性名：width(图片宽度)、height(图片高度) &#13;
&#13;
注意&#13;
&#13;
- 只设置其中一个属性，另一个会自动等比例缩放（图片不会变形）&#13;
&#13;
```html&#13;
&lt;!DOCTYPE html&gt;&#13;
&lt;html lang='en'&gt;&#13;
&lt;head&gt;&#13;
    &lt;meta charset='UTF-8'&gt;&#13;
    &lt;meta name='viewport' content='width=device-width, initial-scale=1.0'&gt;&#13;
    &lt;title&gt;04-图片标签&lt;/title&gt;&#13;
&lt;/head&gt;&#13;
&lt;body&gt;&#13;
    &lt;img src='./图片' alt='加载失败' title='提示文本' width='200'&gt;&#13;
&lt;/body&gt;&#13;
&lt;/html&gt;&#13;
```&#13;
&#13;
&#13;
&#13;
- 如果同时设置两个属性，图片可能会变形&#13;
&#13;
```html&#13;
&lt;!DOCTYPE html&gt;&#13;
&lt;html lang='en'&gt;&#13;
&lt;head&gt;&#13;
    &lt;meta charset='UTF-8'&gt;&#13;
    &lt;meta name='viewport' content='width=device-width, initial-scale=1.0'&gt;&#13;
    &lt;title&gt;04-图片标签&lt;/title&gt;&#13;
&lt;/head&gt;&#13;
&lt;body&gt;&#13;
    &lt;img src='./图片' alt='加载失败' title='提示文本' width='200' height='114'&gt;&#13;
&lt;/body&gt;&#13;
&lt;/html&gt;&#13;
```&#13;
&#13;
&#13;
&#13;
所以正式的代码中只用写一个就好了,好处就是图片不会变形&#13;
&#13;
&lt;hr&gt;&#13;
&#13;
&#13;
### 路径&#13;
&#13;
同级`./图片`&#13;
&#13;
下级`文件夹/图片`&#13;
&#13;
上级`../图片`&#13;
&#13;
&#13;
&#13;
## 音频标签&#13;
&#13;
在页面插入音频&#13;
&#13;
`&lt;audio src='音频' controls&gt;&lt;/audio&gt;`&#13;
&#13;
![](https://fastly.jsdelivr.net/gh/ababll5/tuchuang@img/img/20240717082139.png)&#13;
&#13;
音频标签目前只支持三种格式 ： mp3、Wav、ogg&#13;
&#13;
&#13;
&#13;
## 视频标签&#13;
&#13;
网页插入视频&#13;
&#13;
```html&#13;
 &lt;video src=''&gt;&lt;/video&gt;&#13;
```&#13;
&#13;
![](https://fastly.jsdelivr.net/gh/ababll5/tuchuang@img/img/20240717090634.png)&#13;
&#13;
同上&#13;
&#13;
视频标签支持格式: mp4 、webM、ogg&#13;
&#13;
&#13;
&#13;
## 超链接&#13;
&#13;
```html&#13;
&lt;!DOCTYPE html&gt;&#13;
&lt;html lang='en'&gt;&#13;
&lt;head&gt;&#13;
    &lt;meta charset='UTF-8'&gt;&#13;
    &lt;meta name='viewport' content='width=device-width, initial-scale=1.0'&gt;&#13;
    &lt;title&gt;Document&lt;/title&gt;&#13;
&lt;/head&gt;&#13;
&lt;body&gt;&#13;
    &lt;a href='https://blog.ababll5.cn/'&gt;点我去博客&lt;/a&gt;&#13;
&lt;/body&gt;&#13;
&lt;/html&gt;&#13;
```&#13;
&#13;
项目开发初期不知大链接填什么时可以写'#'代表空连接&#13;
&#13;
还有一个好玩的就是在属性a之间再加其他标签 例如：&#13;
&#13;
```html&#13;
&lt;a href='./06-音频.html'&gt;&lt;button&gt;点我去音频&lt;/button&gt;&lt;/a&gt;&#13;
```&#13;
&#13;
这样，原本的字就变成了按钮，按按钮跳转，也可以加其他标签特别灵活，自己琢磨吧&#13;
&#13;
&#13;
&#13;
### 超链接中的target属性&#13;
&#13;
目标网页打开的形式&#13;
&#13;
![](https://fastly.jsdelivr.net/gh/ababll5/tuchuang@img/img/20240717092626.png)&#13;
&#13;
示例：&#13;
&#13;
```html&#13;
&lt;a href='https://blog.ababll5.cn/' target='_blank'&gt;点我去博客&lt;/a&gt;&#13;
```&#13;
&#13;
。</description><guid isPermaLink="true">http://www.ababll5.cn/post/chu-xue-html%28-biao-qian.html</guid><pubDate>Sat, 07 Sep 2024 14:36:45 +0000</pubDate></item><item><title>一个好用的图床</title><link>http://www.ababll5.cn/post/yi-ge-hao-yong-de-tu-chuang.html</link><description># 今天发现了一个好用的图床[[SM.MS](https://github.com/ababll5/blog/issues/sm.ms)](sm.ms)&#13;
&#13;
&#13;
&#13;
# SM.MS图床&#13;
&#13;
&#13;
&#13;
### 图床是干什么的&#13;
&#13;
图床是一个把图片转换成一串链接用的，并且还有存储图片的一个功能。</description><guid isPermaLink="true">http://www.ababll5.cn/post/yi-ge-hao-yong-de-tu-chuang.html</guid><pubDate>Sat, 07 Sep 2024 14:35:48 +0000</pubDate></item><item><title>github markdown表情包</title><link>http://www.ababll5.cn/post/github%20markdown-biao-qing-bao.html</link><description>People&#13;
&#13;
| :bowtie: `:bowtie:` | :smile: `:smile:` | :laughing: `:laughing:` |&#13;
|---|---|---|&#13;
| :blush: `:blush:` | :smiley: `:smiley:` | :relaxed: `:relaxed:` |&#13;
| :smirk: `:smirk:` | :heart_eyes: `:heart_eyes:` | :kissing_heart: `:kissing_heart:` |&#13;
| :kissing_closed_eyes: `:kissing_closed_eyes:` | :flushed: `:flushed:` | :relieved: `:relieved:` |&#13;
| :satisfied: `:satisfied:` | :grin: `:grin:` | :wink: `:wink:` |&#13;
| :stuck_out_tongue_winking_eye: `:stuck_out_tongue_winking_eye:` | :stuck_out_tongue_closed_eyes: `:stuck_out_tongue_closed_eyes:` | :grinning: `:grinning:` |&#13;
| :kissing: `:kissing:` | :kissing_smiling_eyes: `:kissing_smiling_eyes:` | :stuck_out_tongue: `:stuck_out_tongue:` |&#13;
| :sleeping: `:sleeping:` | :worried: `:worried:` | :frowning: `:frowning:` |&#13;
| :anguished: `:anguished:` | :open_mouth: `:open_mouth:` | :grimacing: `:grimacing:` |&#13;
| :confused: `:confused:` | :hushed: `:hushed:` | :expressionless: `:expressionless:` |&#13;
| :unamused: `:unamused:` | :sweat_smile: `:sweat_smile:` | :sweat: `:sweat:` |&#13;
| :disappointed_relieved: `:disappointed_relieved:` | :weary: `:weary:` | :pensive: `:pensive:` |&#13;
| :disappointed: `:disappointed:` | :confounded: `:confounded:` | :fearful: `:fearful:` |&#13;
| :cold_sweat: `:cold_sweat:` | :persevere: `:persevere:` | :cry: `:cry:` |&#13;
| :sob: `:sob:` | :joy: `:joy:` | :astonished: `:astonished:` |&#13;
| :scream: `:scream:` | :neckbeard: `:neckbeard:` | :tired_face: `:tired_face:` |&#13;
| :angry: `:angry:` | :rage: `:rage:` | :triumph: `:triumph:` |&#13;
| :sleepy: `:sleepy:` | :yum: `:yum:` | :mask: `:mask:` |&#13;
| :sunglasses: `:sunglasses:` | :dizzy_face: `:dizzy_face:` | :imp: `:imp:` |&#13;
| :smiling_imp: `:smiling_imp:` | :neutral_face: `:neutral_face:` | :no_mouth: `:no_mouth:` |&#13;
| :innocent: `:innocent:` | :alien: `:alien:` | :yellow_heart: `:yellow_heart:` |&#13;
| :blue_heart: `:blue_heart:` | :purple_heart: `:purple_heart:` | :heart: `:heart:` |&#13;
| :green_heart: `:green_heart:` | :broken_heart: `:broken_heart:` | :heartbeat: `:heartbeat:` |&#13;
| :heartpulse: `:heartpulse:` | :two_hearts: `:two_hearts:` | :revolving_hearts: `:revolving_hearts:` |&#13;
| :cupid: `:cupid:` | :sparkling_heart: `:sparkling_heart:` | :sparkles: `:sparkles:` |&#13;
| :star: `:star:` | :star2: `:star2:` | :dizzy: `:dizzy:` |&#13;
| :boom: `:boom:` | :collision: `:collision:` | :anger: `:anger:` |&#13;
| :exclamation: `:exclamation:` | :question: `:question:` | :grey_exclamation: `:grey_exclamation:` |&#13;
| :grey_question: `:grey_question:` | :zzz: `:zzz:` | :dash: `:dash:` |&#13;
| :sweat_drops: `:sweat_drops:` | :notes: `:notes:` | :musical_note: `:musical_note:` |&#13;
| :fire: `:fire:` | :hankey: `:hankey:` | :poop: `:poop:` |&#13;
| :shit: `:shit:` | :+1: `:+1:` | :thumbsup: `:thumbsup:` |&#13;
| :-1: `:-1:` | :thumbsdown: `:thumbsdown:` | :ok_hand: `:ok_hand:` |&#13;
| :punch: `:punch:` | :facepunch: `:facepunch:` | :fist: `:fist:` |&#13;
| :v: `:v:` | :wave: `:wave:` | :hand: `:hand:` |&#13;
| :raised_hand: `:raised_hand:` | :open_hands: `:open_hands:` | :point_up: `:point_up:` |&#13;
| :point_down: `:point_down:` | :point_left: `:point_left:` | :point_right: `:point_right:` |&#13;
| :raised_hands: `:raised_hands:` | :pray: `:pray:` | :point_up_2: `:point_up_2:` |&#13;
| :clap: `:clap:` | :muscle: `:muscle:` | :metal: `:metal:` |&#13;
| :fu: `:fu:` | :walking: `:walking:` | :runner: `:runner:` |&#13;
| :running: `:running:` | :couple: `:couple:` | :family: `:family:` |&#13;
| :two_men_holding_hands: `:two_men_holding_hands:` | :two_women_holding_hands: `:two_women_holding_hands:` | :dancer: `:dancer:` |&#13;
| :dancers: `:dancers:` | :ok_woman: `:ok_woman:` | :no_good: `:no_good:` |&#13;
| :information_desk_person: `:information_desk_person:` | :raising_hand: `:raising_hand:` | :bride_with_veil: `:bride_with_veil:` |&#13;
| :person_with_pouting_face: `:person_with_pouting_face:` | :person_frowning: `:person_frowning:` | :bow: `:bow:` |&#13;
| :couplekiss: `:couplekiss:` | :couple_with_heart: `:couple_with_heart:` | :massage: `:massage:` |&#13;
| :haircut: `:haircut:` | :nail_care: `:nail_care:` | :boy: `:boy:` |&#13;
| :girl: `:girl:` | :woman: `:woman:` | :man: `:man:` |&#13;
| :baby: `:baby:` | :older_woman: `:older_woman:` | :older_man: `:older_man:` |&#13;
| :person_with_blond_hair: `:person_with_blond_hair:` | :man_with_gua_pi_mao: `:man_with_gua_pi_mao:` | :man_with_turban: `:man_with_turban:` |&#13;
| :construction_worker: `:construction_worker:` | :cop: `:cop:` | :angel: `:angel:` |&#13;
| :princess: `:princess:` | :smiley_cat: `:smiley_cat:` | :smile_cat: `:smile_cat:` |&#13;
| :heart_eyes_cat: `:heart_eyes_cat:` | :kissing_cat: `:kissing_cat:` | :smirk_cat: `:smirk_cat:` |&#13;
| :scream_cat: `:scream_cat:` | :crying_cat_face: `:crying_cat_face:` | :joy_cat: `:joy_cat:` |&#13;
| :pouting_cat: `:pouting_cat:` | :japanese_ogre: `:japanese_ogre:` | :japanese_goblin: `:japanese_goblin:` |&#13;
| :see_no_evil: `:see_no_evil:` | :hear_no_evil: `:hear_no_evil:` | :speak_no_evil: `:speak_no_evil:` |&#13;
| :guardsman: `:guardsman:` | :skull: `:skull:` | :feet: `:feet:` |&#13;
| :lips: `:lips:` | :kiss: `:kiss:` | :droplet: `:droplet:` |&#13;
| :ear: `:ear:` | :eyes: `:eyes:` | :nose: `:nose:` |&#13;
| :tongue: `:tongue:` | :love_letter: `:love_letter:` | :bust_in_silhouette: `:bust_in_silhouette:` |&#13;
| :busts_in_silhouette: `:busts_in_silhouette:` | :speech_balloon: `:speech_balloon:` | :thought_balloon: `:thought_balloon:` |&#13;
| :feelsgood: `:feelsgood:` | :finnadie: `:finnadie:` | :goberserk: `:goberserk:` |&#13;
| :godmode: `:godmode:` | :hurtrealbad: `:hurtrealbad:` | :rage1: `:rage1:` |&#13;
| :rage2: `:rage2:` | :rage3: `:rage3:` | :rage4: `:rage4:` |&#13;
| :suspect: `:suspect:` | :trollface: `:trollface:` |&#13;
&#13;
Nature&#13;
&#13;
| :sunny: `:sunny:` | :umbrella: `:umbrella:` | :cloud: `:cloud:` |&#13;
|---|---|---|&#13;
| :snowflake: `:snowflake:` | :snowman: `:snowman:` | :zap: `:zap:` |&#13;
| :cyclone: `:cyclone:` | :foggy: `:foggy:` | :ocean: `:ocean:` |&#13;
| :cat: `:cat:` | :dog: `:dog:` | :mouse: `:mouse:` |&#13;
| :hamster: `:hamster:` | :rabbit: `:rabbit:` | :wolf: `:wolf:` |&#13;
| :frog: `:frog:` | :tiger: `:tiger:` | :koala: `:koala:` |&#13;
| :bear: `:bear:` | :pig: `:pig:` | :pig_nose: `:pig_nose:` |&#13;
| :cow: `:cow:` | :boar: `:boar:` | :monkey_face: `:monkey_face:` |&#13;
| :monkey: `:monkey:` | :horse: `:horse:` | :racehorse: `:racehorse:` |&#13;
| :camel: `:camel:` | :sheep: `:sheep:` | :elephant: `:elephant:` |&#13;
| :panda_face: `:panda_face:` | :snake: `:snake:` | :bird: `:bird:` |&#13;
| :baby_chick: `:baby_chick:` | :hatched_chick: `:hatched_chick:` | :hatching_chick: `:hatching_chick:` |&#13;
| :chicken: `:chicken:` | :penguin: `:penguin:` | :turtle: `:turtle:` |&#13;
| :bug: `:bug:` | :honeybee: `:honeybee:` | :ant: `:ant:` |&#13;
| :beetle: `:beetle:` | :snail: `:snail:` | :octopus: `:octopus:` |&#13;
| :tropical_fish: `:tropical_fish:` | :fish: `:fish:` | :whale: `:whale:` |&#13;
| :whale2: `:whale2:` | :dolphin: `:dolphin:` | :cow2: `:cow2:` |&#13;
| :ram: `:ram:` | :rat: `:rat:` | :water_buffalo: `:water_buffalo:` |&#13;
| :tiger2: `:tiger2:` | :rabbit2: `:rabbit2:` | :dragon: `:dragon:` |&#13;
| :goat: `:goat:` | :rooster: `:rooster:` | :dog2: `:dog2:` |&#13;
| :pig2: `:pig2:` | :mouse2: `:mouse2:` | :ox: `:ox:` |&#13;
| :dragon_face: `:dragon_face:` | :blowfish: `:blowfish:` | :crocodile: `:crocodile:` |&#13;
| :dromedary_camel: `:dromedary_camel:` | :leopard: `:leopard:` | :cat2: `:cat2:` |&#13;
| :poodle: `:poodle:` | :paw_prints: `:paw_prints:` | :bouquet: `:bouquet:` |&#13;
| :cherry_blossom: `:cherry_blossom:` | :tulip: `:tulip:` | :four_leaf_clover: `:four_leaf_clover:` |&#13;
| :rose: `:rose:` | :sunflower: `:sunflower:` | :hibiscus: `:hibiscus:` |&#13;
| :maple_leaf: `:maple_leaf:` | :leaves: `:leaves:` | :fallen_leaf: `:fallen_leaf:` |&#13;
| :herb: `:herb:` | :mushroom: `:mushroom:` | :cactus: `:cactus:` |&#13;
| :palm_tree: `:palm_tree:` | :evergreen_tree: `:evergreen_tree:` | :deciduous_tree: `:deciduous_tree:` |&#13;
| :chestnut: `:chestnut:` | :seedling: `:seedling:` | :blossom: `:blossom:` |&#13;
| :ear_of_rice: `:ear_of_rice:` | :shell: `:shell:` | :globe_with_meridians: `:globe_with_meridians:` |&#13;
| :sun_with_face: `:sun_with_face:` | :full_moon_with_face: `:full_moon_with_face:` | :new_moon_with_face: `:new_moon_with_face:` |&#13;
| :new_moon: `:new_moon:` | :waxing_crescent_moon: `:waxing_crescent_moon:` | :first_quarter_moon: `:first_quarter_moon:` |&#13;
| :waxing_gibbous_moon: `:waxing_gibbous_moon:` | :full_moon: `:full_moon:` | :waning_gibbous_moon: `:waning_gibbous_moon:` |&#13;
| :last_quarter_moon: `:last_quarter_moon:` | :waning_crescent_moon: `:waning_crescent_moon:` | :last_quarter_moon_with_face: `:last_quarter_moon_with_face:` |&#13;
| :first_quarter_moon_with_face: `:first_quarter_moon_with_face:` | :moon: `:moon:` | :earth_africa: `:earth_africa:` |&#13;
| :earth_americas: `:earth_americas:` | :earth_asia: `:earth_asia:` | :volcano: `:volcano:` |&#13;
| :milky_way: `:milky_way:` | :partly_sunny: `:partly_sunny:` | :octocat: `:octocat:` |&#13;
| :squirrel: `:squirrel:` |&#13;
&#13;
Objects&#13;
&#13;
| :bamboo: `:bamboo:` | :gift_heart: `:gift_heart:` | :dolls: `:dolls:` |&#13;
|---|---|---|&#13;
| :school_satchel: `:school_satchel:` | :mortar_board: `:mortar_board:` | :flags: `:flags:` |&#13;
| :fireworks: `:fireworks:` | :sparkler: `:sparkler:` | :wind_chime: `:wind_chime:` |&#13;
| :rice_scene: `:rice_scene:` | :jack_o_lantern: `:jack_o_lantern:` | :ghost: `:ghost:` |&#13;
| :santa: `:santa:` | :christmas_tree: `:christmas_tree:` | :gift: `:gift:` |&#13;
| :bell: `:bell:` | :no_bell: `:no_bell:` | :tanabata_tree: `:tanabata_tree:` |&#13;
| :tada: `:tada:` | :confetti_ball: `:confetti_ball:` | :balloon: `:balloon:` |&#13;
| :crystal_ball: `:crystal_ball:` | :cd: `:cd:` | :dvd: `:dvd:` |&#13;
| :floppy_disk: `:floppy_disk:` | :camera: `:camera:` | :video_camera: `:video_camera:` |&#13;
| :movie_camera: `:movie_camera:` | :computer: `:computer:` | :tv: `:tv:` |&#13;
| :iphone: `:iphone:` | :phone: `:phone:` | :telephone: `:telephone:` |&#13;
| :telephone_receiver: `:telephone_receiver:` | :pager: `:pager:` | :fax: `:fax:` |&#13;
| :minidisc: `:minidisc:` | :vhs: `:vhs:` | :sound: `:sound:` |&#13;
| :speaker: `:speaker:` | :mute: `:mute:` | :loudspeaker: `:loudspeaker:` |&#13;
| :mega: `:mega:` | :hourglass: `:hourglass:` | :hourglass_flowing_sand: `:hourglass_flowing_sand:` |&#13;
| :alarm_clock: `:alarm_clock:` | :watch: `:watch:` | :radio: `:radio:` |&#13;
| :satellite: `:satellite:` | :loop: `:loop:` | :mag: `:mag:` |&#13;
| :mag_right: `:mag_right:` | :unlock: `:unlock:` | :lock: `:lock:` |&#13;
| :lock_with_ink_pen: `:lock_with_ink_pen:` | :closed_lock_with_key: `:closed_lock_with_key:` | :key: `:key:` |&#13;
| :bulb: `:bulb:` | :flashlight: `:flashlight:` | :high_brightness: `:high_brightness:` |&#13;
| :low_brightness: `:low_brightness:` | :electric_plug: `:electric_plug:` | :battery: `:battery:` |&#13;
| :calling: `:calling:` | :email: `:email:` | :mailbox: `:mailbox:` |&#13;
| :postbox: `:postbox:` | :bath: `:bath:` | :bathtub: `:bathtub:` |&#13;
| :shower: `:shower:` | :toilet: `:toilet:` | :wrench: `:wrench:` |&#13;
| :nut_and_bolt: `:nut_and_bolt:` | :hammer: `:hammer:` | :seat: `:seat:` |&#13;
| :moneybag: `:moneybag:` | :yen: `:yen:` | :dollar: `:dollar:` |&#13;
| :pound: `:pound:` | :euro: `:euro:` | :credit_card: `:credit_card:` |&#13;
| :money_with_wings: `:money_with_wings:` | :e-mail: `:e-mail:` | :inbox_tray: `:inbox_tray:` |&#13;
| :outbox_tray: `:outbox_tray:` | :envelope: `:envelope:` | :incoming_envelope: `:incoming_envelope:` |&#13;
| :postal_horn: `:postal_horn:` | :mailbox_closed: `:mailbox_closed:` | :mailbox_with_mail: `:mailbox_with_mail:` |&#13;
| :mailbox_with_no_mail: `:mailbox_with_no_mail:` | :door: `:door:` | :smoking: `:smoking:` |&#13;
| :bomb: `:bomb:` | :gun: `:gun:` | :hocho: `:hocho:` |&#13;
| :pill: `:pill:` | :syringe: `:syringe:` | :page_facing_up: `:page_facing_up:` |&#13;
| :page_with_curl: `:page_with_curl:` | :bookmark_tabs: `:bookmark_tabs:` | :bar_chart: `:bar_chart:` |&#13;
| :chart_with_upwards_trend: `:chart_with_upwards_trend:` | :chart_with_downwards_trend: `:chart_with_downwards_trend:` | :scroll: `:scroll:` |&#13;
| :clipboard: `:clipboard:` | :calendar: `:calendar:` | :date: `:date:` |&#13;
| :card_index: `:card_index:` | :file_folder: `:file_folder:` | :open_file_folder: `:open_file_folder:` |&#13;
| :scissors: `:scissors:` | :pushpin: `:pushpin:` | :paperclip: `:paperclip:` |&#13;
| :black_nib: `:black_nib:` | :pencil2: `:pencil2:` | :straight_ruler: `:straight_ruler:` |&#13;
| :triangular_ruler: `:triangular_ruler:` | :closed_book: `:closed_book:` | :green_book: `:green_book:` |&#13;
| :blue_book: `:blue_book:` | :orange_book: `:orange_book:` | :notebook: `:notebook:` |&#13;
| :notebook_with_decorative_cover: `:notebook_with_decorative_cover:` | :ledger: `:ledger:` | :books: `:books:` |&#13;
| :bookmark: `:bookmark:` | :name_badge: `:name_badge:` | :microscope: `:microscope:` |&#13;
| :telescope: `:telescope:` | :newspaper: `:newspaper:` | :football: `:football:` |&#13;
| :basketball: `:basketball:` | :soccer: `:soccer:` | :baseball: `:baseball:` |&#13;
| :tennis: `:tennis:` | :8ball: `:8ball:` | :rugby_football: `:rugby_football:` |&#13;
| :bowling: `:bowling:` | :golf: `:golf:` | :mountain_bicyclist: `:mountain_bicyclist:` |&#13;
| :bicyclist: `:bicyclist:` | :horse_racing: `:horse_racing:` | :snowboarder: `:snowboarder:` |&#13;
| :swimmer: `:swimmer:` | :surfer: `:surfer:` | :ski: `:ski:` |&#13;
| :spades: `:spades:` | :hearts: `:hearts:` | :clubs: `:clubs:` |&#13;
| :diamonds: `:diamonds:` | :gem: `:gem:` | :ring: `:ring:` |&#13;
| :trophy: `:trophy:` | :musical_score: `:musical_score:` | :musical_keyboard: `:musical_keyboard:` |&#13;
| :violin: `:violin:` | :space_invader: `:space_invader:` | :video_game: `:video_game:` |&#13;
| :black_joker: `:black_joker:` | :flower_playing_cards: `:flower_playing_cards:` | :game_die: `:game_die:` |&#13;
| :dart: `:dart:` | :mahjong: `:mahjong:` | :clapper: `:clapper:` |&#13;
| :memo: `:memo:` | :pencil: `:pencil:` | :book: `:book:` |&#13;
| :art: `:art:` | :microphone: `:microphone:` | :headphones: `:headphones:` |&#13;
| :trumpet: `:trumpet:` | :saxophone: `:saxophone:` | :guitar: `:guitar:` |&#13;
| :shoe: `:shoe:` | :sandal: `:sandal:` | :high_heel: `:high_heel:` |&#13;
| :lipstick: `:lipstick:` | :boot: `:boot:` | :shirt: `:shirt:` |&#13;
| :tshirt: `:tshirt:` | :necktie: `:necktie:` | :womans_clothes: `:womans_clothes:` |&#13;
| :dress: `:dress:` | :running_shirt_with_sash: `:running_shirt_with_sash:` | :jeans: `:jeans:` |&#13;
| :kimono: `:kimono:` | :bikini: `:bikini:` | :ribbon: `:ribbon:` |&#13;
| :tophat: `:tophat:` | :crown: `:crown:` | :womans_hat: `:womans_hat:` |&#13;
| :mans_shoe: `:mans_shoe:` | :closed_umbrella: `:closed_umbrella:` | :briefcase: `:briefcase:` |&#13;
| :handbag: `:handbag:` | :pouch: `:pouch:` | :purse: `:purse:` |&#13;
| :eyeglasses: `:eyeglasses:` | :fishing_pole_and_fish: `:fishing_pole_and_fish:` | :coffee: `:coffee:` |&#13;
| :tea: `:tea:` | :sake: `:sake:` | :baby_bottle: `:baby_bottle:` |&#13;
| :beer: `:beer:` | :beers: `:beers:` | :cocktail: `:cocktail:` |&#13;
| :tropical_drink: `:tropical_drink:` | :wine_glass: `:wine_glass:` | :fork_and_knife: `:fork_and_knife:` |&#13;
| :pizza: `:pizza:` | :hamburger: `:hamburger:` | :fries: `:fries:` |&#13;
| :poultry_leg: `:poultry_leg:` | :meat_on_bone: `:meat_on_bone:` | :spaghetti: `:spaghetti:` |&#13;
| :curry: `:curry:` | :fried_shrimp: `:fried_shrimp:` | :bento: `:bento:` |&#13;
| :sushi: `:sushi:` | :fish_cake: `:fish_cake:` | :rice_ball: `:rice_ball:` |&#13;
| :rice_cracker: `:rice_cracker:` | :rice: `:rice:` | :ramen: `:ramen:` |&#13;
| :stew: `:stew:` | :oden: `:oden:` | :dango: `:dango:` |&#13;
| :egg: `:egg:` | :bread: `:bread:` | :doughnut: `:doughnut:` |&#13;
| :custard: `:custard:` | :icecream: `:icecream:` | :ice_cream: `:ice_cream:` |&#13;
| :shaved_ice: `:shaved_ice:` | :birthday: `:birthday:` | :cake: `:cake:` |&#13;
| :cookie: `:cookie:` | :chocolate_bar: `:chocolate_bar:` | :candy: `:candy:` |&#13;
| :lollipop: `:lollipop:` | :honey_pot: `:honey_pot:` | :apple: `:apple:` |&#13;
| :green_apple: `:green_apple:` | :tangerine: `:tangerine:` | :lemon: `:lemon:` |&#13;
| :cherries: `:cherries:` | :grapes: `:grapes:` | :watermelon: `:watermelon:` |&#13;
| :strawberry: `:strawberry:` | :peach: `:peach:` | :melon: `:melon:` |&#13;
| :banana: `:banana:` | :pear: `:pear:` | :pineapple: `:pineapple:` |&#13;
| :sweet_potato: `:sweet_potato:` | :eggplant: `:eggplant:` | :tomato: `:tomato:` |&#13;
| :corn: `:corn:` |&#13;
&#13;
Places&#13;
&#13;
| :house: `:house:` | :house_with_garden: `:house_with_garden:` | :school: `:school:` |&#13;
|---|---|---|&#13;
| :office: `:office:` | :post_office: `:post_office:` | :hospital: `:hospital:` |&#13;
| :bank: `:bank:` | :convenience_store: `:convenience_store:` | :love_hotel: `:love_hotel:` |&#13;
| :hotel: `:hotel:` | :wedding: `:wedding:` | :church: `:church:` |&#13;
| :department_store: `:department_store:` | :european_post_office: `:european_post_office:` | :city_sunrise: `:city_sunrise:` |&#13;
| :city_sunset: `:city_sunset:` | :japanese_castle: `:japanese_castle:` | :european_castle: `:european_castle:` |&#13;
| :tent: `:tent:` | :factory: `:factory:` | :tokyo_tower: `:tokyo_tower:` |&#13;
| :japan: `:japan:` | :mount_fuji: `:mount_fuji:` | :sunrise_over_mountains: `:sunrise_over_mountains:` |&#13;
| :sunrise: `:sunrise:` | :stars: `:stars:` | :statue_of_liberty: `:statue_of_liberty:` |&#13;
| :bridge_at_night: `:bridge_at_night:` | :carousel_horse: `:carousel_horse:` | :rainbow: `:rainbow:` |&#13;
| :ferris_wheel: `:ferris_wheel:` | :fountain: `:fountain:` | :roller_coaster: `:roller_coaster:` |&#13;
| :ship: `:ship:` | :speedboat: `:speedboat:` | :boat: `:boat:` |&#13;
| :sailboat: `:sailboat:` | :rowboat: `:rowboat:` | :anchor: `:anchor:` |&#13;
| :rocket: `:rocket:` | :airplane: `:airplane:` | :helicopter: `:helicopter:` |&#13;
| :steam_locomotive: `:steam_locomotive:` | :tram: `:tram:` | :mountain_railway: `:mountain_railway:` |&#13;
| :bike: `:bike:` | :aerial_tramway: `:aerial_tramway:` | :suspension_railway: `:suspension_railway:` |&#13;
| :mountain_cableway: `:mountain_cableway:` | :tractor: `:tractor:` | :blue_car: `:blue_car:` |&#13;
| :oncoming_automobile: `:oncoming_automobile:` | :car: `:car:` | :red_car: `:red_car:` |&#13;
| :taxi: `:taxi:` | :oncoming_taxi: `:oncoming_taxi:` | :articulated_lorry: `:articulated_lorry:` |&#13;
| :bus: `:bus:` | :oncoming_bus: `:oncoming_bus:` | :rotating_light: `:rotating_light:` |&#13;
| :police_car: `:police_car:` | :oncoming_police_car: `:oncoming_police_car:` | :fire_engine: `:fire_engine:` |&#13;
| :ambulance: `:ambulance:` | :minibus: `:minibus:` | :truck: `:truck:` |&#13;
| :train: `:train:` | :station: `:station:` | :train2: `:train2:` |&#13;
| :bullettrain_front: `:bullettrain_front:` | :bullettrain_side: `:bullettrain_side:` | :light_rail: `:light_rail:` |&#13;
| :monorail: `:monorail:` | :railway_car: `:railway_car:` | :trolleybus: `:trolleybus:` |&#13;
| :ticket: `:ticket:` | :fuelpump: `:fuelpump:` | :vertical_traffic_light: `:vertical_traffic_light:` |&#13;
| :traffic_light: `:traffic_light:` | :warning: `:warning:` | :construction: `:construction:` |&#13;
| :beginner: `:beginner:` | :atm: `:atm:` | :slot_machine: `:slot_machine:` |&#13;
| :busstop: `:busstop:` | :barber: `:barber:` | :hotsprings: `:hotsprings:` |&#13;
| :checkered_flag: `:checkered_flag:` | :crossed_flags: `:crossed_flags:` | :izakaya_lantern: `:izakaya_lantern:` |&#13;
| :moyai: `:moyai:` | :circus_tent: `:circus_tent:` | :performing_arts: `:performing_arts:` |&#13;
| :round_pushpin: `:round_pushpin:` | :triangular_flag_on_post: `:triangular_flag_on_post:` | :jp: `:jp:` |&#13;
| :kr: `:kr:` | :cn: `:cn:` | :us: `:us:` |&#13;
| :fr: `:fr:` | :es: `:es:` | :it: `:it:` |&#13;
| :ru: `:ru:` | :gb: `:gb:` | :uk: `:uk:` |&#13;
| :de: `:de:` |&#13;
&#13;
Symbols&#13;
&#13;
| :one: `:one:` | :two: `:two:` | :three: `:three:` |&#13;
|---|---|---|&#13;
| :four: `:four:` | :five: `:five:` | :six: `:six:` |&#13;
| :seven: `:seven:` | :eight: `:eight:` | :nine: `:nine:` |&#13;
| :keycap_ten: `:keycap_ten:` | :1234: `:1234:` | :zero: `:zero:` |&#13;
| :hash: `:hash:` | :symbols: `:symbols:` | :arrow_backward: `:arrow_backward:` |&#13;
| :arrow_down: `:arrow_down:` | :arrow_forward: `:arrow_forward:` | :arrow_left: `:arrow_left:` |&#13;
| :capital_abcd: `:capital_abcd:` | :abcd: `:abcd:` | :abc: `:abc:` |&#13;
| :arrow_lower_left: `:arrow_lower_left:` | :arrow_lower_right: `:arrow_lower_right:` | :arrow_right: `:arrow_right:` |&#13;
| :arrow_up: `:arrow_up:` | :arrow_upper_left: `:arrow_upper_left:` | :arrow_upper_right: `:arrow_upper_right:` |&#13;
| :arrow_double_down: `:arrow_double_down:` | :arrow_double_up: `:arrow_double_up:` | :arrow_down_small: `:arrow_down_small:` |&#13;
| :arrow_heading_down: `:arrow_heading_down:` | :arrow_heading_up: `:arrow_heading_up:` | :leftwards_arrow_with_hook: `:leftwards_arrow_with_hook:` |&#13;
| :arrow_right_hook: `:arrow_right_hook:` | :left_right_arrow: `:left_right_arrow:` | :arrow_up_down: `:arrow_up_down:` |&#13;
| :arrow_up_small: `:arrow_up_small:` | :arrows_clockwise: `:arrows_clockwise:` | :arrows_counterclockwise: `:arrows_counterclockwise:` |&#13;
| :rewind: `:rewind:` | :fast_forward: `:fast_forward:` | :information_source: `:information_source:` |&#13;
| :ok: `:ok:` | :twisted_rightwards_arrows: `:twisted_rightwards_arrows:` | :repeat: `:repeat:` |&#13;
| :repeat_one: `:repeat_one:` | :new: `:new:` | :top: `:top:` |&#13;
| :up: `:up:` | :cool: `:cool:` | :free: `:free:` |&#13;
| :ng: `:ng:` | :cinema: `:cinema:` | :koko: `:koko:` |&#13;
| :signal_strength: `:signal_strength:` | :u5272: `:u5272:` | :u5408: `:u5408:` |&#13;
| :u55b6: `:u55b6:` | :u6307: `:u6307:` | :u6708: `:u6708:` |&#13;
| :u6709: `:u6709:` | :u6e80: `:u6e80:` | :u7121: `:u7121:` |&#13;
| :u7533: `:u7533:` | :u7a7a: `:u7a7a:` | :u7981: `:u7981:` |&#13;
| :sa: `:sa:` | :restroom: `:restroom:` | :mens: `:mens:` |&#13;
| :womens: `:womens:` | :baby_symbol: `:baby_symbol:` | :no_smoking: `:no_smoking:` |&#13;
| :parking: `:parking:` | :wheelchair: `:wheelchair:` | :metro: `:metro:` |&#13;
| :baggage_claim: `:baggage_claim:` | :accept: `:accept:` | :wc: `:wc:` |&#13;
| :potable_water: `:potable_water:` | :put_litter_in_its_place: `:put_litter_in_its_place:` | :secret: `:secret:` |&#13;
| :congratulations: `:congratulations:` | :m: `:m:` | :passport_control: `:passport_control:` |&#13;
| :left_luggage: `:left_luggage:` | :customs: `:customs:` | :ideograph_advantage: `:ideograph_advantage:` |&#13;
| :cl: `:cl:` | :sos: `:sos:` | :id: `:id:` |&#13;
| :no_entry_sign: `:no_entry_sign:` | :underage: `:underage:` | :no_mobile_phones: `:no_mobile_phones:` |&#13;
| :do_not_litter: `:do_not_litter:` | :non-potable_water: `:non-potable_water:` | :no_bicycles: `:no_bicycles:` |&#13;
| :no_pedestrians: `:no_pedestrians:` | :children_crossing: `:children_crossing:` | :no_entry: `:no_entry:` |&#13;
| :eight_spoked_asterisk: `:eight_spoked_asterisk:` | :eight_pointed_black_star: `:eight_pointed_black_star:` | :heart_decoration: `:heart_decoration:` |&#13;
| :vs: `:vs:` | :vibration_mode: `:vibration_mode:` | :mobile_phone_off: `:mobile_phone_off:` |&#13;
| :chart: `:chart:` | :currency_exchange: `:currency_exchange:` | :aries: `:aries:` |&#13;
| :taurus: `:taurus:` | :gemini: `:gemini:` | :cancer: `:cancer:` |&#13;
| :leo: `:leo:` | :virgo: `:virgo:` | :libra: `:libra:` |&#13;
| :scorpius: `:scorpius:` | :sagittarius: `:sagittarius:` | :capricorn: `:capricorn:` |&#13;
| :aquarius: `:aquarius:` | :pisces: `:pisces:` | :ophiuchus: `:ophiuchus:` |&#13;
| :six_pointed_star: `:six_pointed_star:` | :negative_squared_cross_mark: `:negative_squared_cross_mark:` | :a: `:a:` |&#13;
| :b: `:b:` | :ab: `:ab:` | :o2: `:o2:` |&#13;
| :diamond_shape_with_a_dot_inside: `:diamond_shape_with_a_dot_inside:` | :recycle: `:recycle:` | :end: `:end:` |&#13;
| :on: `:on:` | :soon: `:soon:` | :clock1: `:clock1:` |&#13;
| :clock130: `:clock130:` | :clock10: `:clock10:` | :clock1030: `:clock1030:` |&#13;
| :clock11: `:clock11:` | :clock1130: `:clock1130:` | :clock12: `:clock12:` |&#13;
| :clock1230: `:clock1230:` | :clock2: `:clock2:` | :clock230: `:clock230:` |&#13;
| :clock3: `:clock3:` | :clock330: `:clock330:` | :clock4: `:clock4:` |&#13;
| :clock430: `:clock430:` | :clock5: `:clock5:` | :clock530: `:clock530:` |&#13;
| :clock6: `:clock6:` | :clock630: `:clock630:` | :clock7: `:clock7:` |&#13;
| :clock730: `:clock730:` | :clock8: `:clock8:` | :clock830: `:clock830:` |&#13;
| :clock9: `:clock9:` | :clock930: `:clock930:` | :heavy_dollar_sign: `:heavy_dollar_sign:` |&#13;
| :copyright: `:copyright:` | :registered: `:registered:` | :tm: `:tm:` |&#13;
| :x: `:x:` | :heavy_exclamation_mark: `:heavy_exclamation_mark:` | :bangbang: `:bangbang:` |&#13;
| :interrobang: `:interrobang:` | :o: `:o:` | :heavy_multiplication_x: `:heavy_multiplication_x:` |&#13;
| :heavy_plus_sign: `:heavy_plus_sign:` | :heavy_minus_sign: `:heavy_minus_sign:` | :heavy_division_sign: `:heavy_division_sign:` |&#13;
| :white_flower: `:white_flower:` | :100: `:100:` | :heavy_check_mark: `:heavy_check_mark:` |&#13;
| :ballot_box_with_check: `:ballot_box_with_check:` | :radio_button: `:radio_button:` | :link: `:link:` |&#13;
| :curly_loop: `:curly_loop:` | :wavy_dash: `:wavy_dash:` | :part_alternation_mark: `:part_alternation_mark:` |&#13;
| :trident: `:trident:` | :black_square: `:black_square:` | :white_square: `:white_square:` |&#13;
| :white_check_mark: `:white_check_mark:` | :black_square_button: `:black_square_button:` | :white_square_button: `:white_square_button:` |&#13;
| :black_circle: `:black_circle:` | :white_circle: `:white_circle:` | :red_circle: `:red_circle:` |&#13;
| :large_blue_circle: `:large_blue_circle:` | :large_blue_diamond: `:large_blue_diamond:` | :large_orange_diamond: `:large_orange_diamond:` |&#13;
| :small_blue_diamond: `:small_blue_diamond:` | :small_orange_diamond: `:small_orange_diamond:` | :small_red_triangle: `:small_red_triangle:` |&#13;
| :small_red_triangle_down: `:small_red_triangle_down:` | :shipit: `:shipit:` |&#13;
。</description><guid isPermaLink="true">http://www.ababll5.cn/post/github%20markdown-biao-qing-bao.html</guid><pubDate>Sat, 07 Sep 2024 14:35:12 +0000</pubDate></item><item><title>找到一个VScode上帮助你写代码的ai</title><link>http://www.ababll5.cn/post/zhao-dao-yi-ge-VScode-shang-bang-zhu-ni-xie-dai-ma-de-ai.html</link><description># 找到一个VScode上帮助你写代码的ai&#13;
&#13;
今天刷视频的时候，看到一个视频，讲的是如何使用VScode上的AI来帮助你写代码，感觉很酷，于是就尝试了一下。</description><guid isPermaLink="true">http://www.ababll5.cn/post/zhao-dao-yi-ge-VScode-shang-bang-zhu-ni-xie-dai-ma-de-ai.html</guid><pubDate>Sat, 07 Sep 2024 14:34:10 +0000</pubDate></item><item><title>使用纯github当博客(非issues)</title><link>http://www.ababll5.cn/post/shi-yong-chun-github-dang-bo-ke-%28-fei-issues%29.html</link><description># 纯使用github当博客&#13;
&#13;
本教程没有用到任何博客框架，只教你如何只用github的markdown功能搭建一个简约的博客&#13;
我只提供一个思路，不一定要按我的来&#13;
&#13;
# 创建仓库&#13;
&#13;
点击这个new创建一个仓库  &#13;
&lt;img width='372' alt='image' src='https://github.com/user-attachments/assets/e686bdcd-cdcb-4394-852a-31b976beb205'&gt;  &#13;
&#13;
信息这样写  &#13;
&lt;img width='781' alt='image' src='https://github.com/user-attachments/assets/5ce25d20-4db8-4380-87a1-51e7fc26ad96'&gt;  &#13;
&#13;
然后点创建  &#13;
&lt;img width='757' alt='image' src='https://github.com/user-attachments/assets/14e90885-d3a8-418d-9f20-828b5d750d20'&gt;&#13;
&#13;
# 配置仓库文件&#13;
&#13;
可以叫参考一下我的然后改成你自己的   &#13;
&#13;
```&#13;
|&#13;
|---posts            # 存文章&#13;
|    |---cpp       # 分类&#13;
|    |---html&#13;
|    |---hexo&#13;
|    |---教程&#13;
|&#13;
|--- 。</description><guid isPermaLink="true">http://www.ababll5.cn/post/shi-yong-chun-github-dang-bo-ke-%28-fei-issues%29.html</guid><pubDate>Sat, 07 Sep 2024 14:33:00 +0000</pubDate></item><item><title>搭建一个属于自己的网站</title><link>http://www.ababll5.cn/post/da-jian-yi-ge-shu-yu-zi-ji-de-wang-zhan.html</link><description># 前言&#13;
&#13;
搭建网站我们采用的是wordpress来搭建一个属于自己的技术博客&#13;
&#13;
如果你是程序员或者这方面的大佬你就可以划走了，这篇文章主要是讲给什么都不懂的编程小白。</description><guid isPermaLink="true">http://www.ababll5.cn/post/da-jian-yi-ge-shu-yu-zi-ji-de-wang-zhan.html</guid><pubDate>Sat, 07 Sep 2024 14:31:35 +0000</pubDate></item><item><title>about</title><link>http://www.ababll5.cn/about.html</link><description># 关于我&#13;
&#13;
一名初中生。</description><guid isPermaLink="true">http://www.ababll5.cn/about.html</guid><pubDate>Sat, 07 Sep 2024 14:10:18 +0000</pubDate></item><item><title>link</title><link>http://www.ababll5.cn/link.html</link><description># 友情链接&#13;
&gt; 那些人，那些事&#13;
&#13;
# 工具&#13;
&gt; 使用的网页好工具&#13;
- [github](github.com)&#13;
。</description><guid isPermaLink="true">http://www.ababll5.cn/link.html</guid><pubDate>Sat, 07 Sep 2024 14:12:40 +0000</pubDate></item></channel></rss>